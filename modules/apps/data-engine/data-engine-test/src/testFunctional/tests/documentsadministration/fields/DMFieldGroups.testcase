@component-name = "portal-document-management"
definition {

	property portal.release = "true";
	property portal.upstream = "true";
	property testray.main.component.name = "Documents Management";

	setUp {
		TestCase.setUpPortalInstance();

		User.firstLoginPG();
	}

	tearDown {
		var testPortalInstance = PropsUtil.get("test.portal.instance");

		if ("${testPortalInstance}" == "true") {
			PortalInstances.tearDownCP();
		}
		else {
			DMDocument.tearDownCP();

			User.logoutPG();
		}
	}

	@description = "This is a test for LPS-98077. As a Developer, I want to the ability to nest fields"
	@ignore = "true"
	@priority = "3"
	test CheckIfFieldGroupDataPersists {
		property portal.acceptance = "false";

		// TODO LPS-98077 CheckIfFieldGroupDataPersists pending implementation

	}

	@description = "This is a test for LPS-98077. As a Developer, I want to the ability to nest fields"
	@priority = "5"
	test CreateFieldGroup {
		property portal.acceptance = "false";

		var dmDocumentTypeName = "DM Document Type Name";
	
		DMNavigator.openDocumentsAndMediaAdmin(siteURLKey = "guest");

		DMNavigator.gotoDocumentType();

		DMDocumentType.addWithoutSave(
			dmDocumentTypeDescription = "DM Document Type Description",
			dmDocumentTypeName = "${dmDocumentTypeName}",
			dmDocumentTypeFieldNames = "Text"
		);

		DataEngine.addFieldNested(
			fieldFieldLabel = "Numeric",
			fieldName = "Numeric",
			targetFieldLabel = "Text"
		);

		PortletEntry.save();

		DMDocumentType.viewCP(dmDocumentTypeName = "${dmDocumentTypeName}");

		LexiconEntry.gotoEntry(rowEntry = "${dmDocumentTypeName}");

		AssertElementPresent(locator1="DataEngineBuilder#FORM_FIELDS_GROUP_1");

		PortletEntry.save();

		DMDocument.deleteCP(
			dmDocumentTitle = "${dmDocumentTypeName}",
			recycleBinDisabled = "true"	
		);
	}

	@description = "This is a test for LPS-98077. As a Developer, I want to the ability to nest fields"
	@ignore = "true"
	@priority = "4"
	test DeleteAFieldFromAFieldGroup {
		property portal.acceptance = "false";

		// TODO LPS-98077 DeleteAFieldFromAFieldGroup pending implementation
	}

	@description = "This is a test for LPS-98077. As a Developer, I want to the ability to nest fields"
	@ignore = "true"
	@priority = "5"
	test DeleteFieldGroupOnStructure {
		property portal.acceptance = "false";

		// TODO LPS-98077 DeleteFieldGroupOnStructure pending implementation
	}

	@description = "This is a test for LPS-98077. As a Developer, I want to the ability to nest fields"
	@ignore = "true"
	@priority = "5"
	test DeleteNestedFieldGroupOnStructure {
		property portal.acceptance = "false";

		// TODO LPS-98077 DeleteNestedFieldGroupOnStructure pending implementation
	}

	@description = "This is a test for LPS-98077. As a Developer, I want to the ability to nest fields"
	@ignore = "true"
	@priority = "5"
	test DuplicateAFieldGroup {
		property portal.acceptance = "false";

		// TODO LPS-98077 DuplicateAFieldGroup pending implementation
	}

	@description = "This is a test for LPS-98077. As a Developer, I want to the ability to nest fields"
	@ignore = "true"
	@priority = "5"
	test DuplicateANestedFieldGroup {
		property portal.acceptance = "false";

		// TODO LPS-98077 DuplicateANestedFieldGroup pending implementation
	}

	@description = "This is a test for LPS-98077. As a Developer, I want to the ability to nest fields"
	@ignore = "true"
	@priority = "4"
	test EditFieldGroupLabel {
		property portal.acceptance = "false";

		// TODO LPS-98077 EditFieldGroupLabel pending implementation
	}

	@description = "This is a test for LPS-98077. As a Developer, I want to the ability to nest fields"
	@ignore = "true"
	@priority = "3"
	test EditFieldOnDuplicatedFieldGroup {
		property portal.acceptance = "false";

		// TODO LPS-98077 EditFieldOnDuplicatedFieldGroup pending implementation
	}

	@description = "This is a test for LPS-98077. As a Developer, I want to the ability to nest fields"
	@ignore = "true"
	@priority = "4"
	test EmptyAFieldGroup {
		property portal.acceptance = "false";

		// TODO LPS-98077 EmptyAFieldGroup pending implementation
	}

	@description = "This is a test for LPS-98077. As a Developer, I want to the ability to nest fields"
	@ignore = "true"
	@priority = "5"
	test NestAFieldGroupOnAnotherFieldGroup {
		property portal.acceptance = "false";

		// TODO LPS-98077 NestAFieldGroupOnAnotherFieldGroup pending implementation
	}

	@description = "This is a test for LPS-98077. As a Developer, I want to the ability to nest fields"
	@ignore = "true"
	@priority = "4"
	test SetFieldGroupAsCollapsibleAndExecuteOnUpload {
		property portal.acceptance = "false";

		// TODO LPS-98077 SetFieldGroupAsCollapsibleAndExecuteOnUpload pending implementation
	}

	@description = "This is a test for LPS-98077. As a Developer, I want to the ability to nest fields"
	@ignore = "true"
	@priority = "4"
	test SetFieldGroupAsRepeatableAndExecuteOnUpload {
		property portal.acceptance = "false";

		// TODO LPS-98077 SetFieldGroupAsRepeatableAndExecuteOnUpload pending implementation
	}

}